proxy_cache_path {{ nginx.cache_path }} levels=1:2 keys_zone=STATIC:8m inactive=24h  max_size=1g;

{% if nginx.enable_ssl %}
server {
    listen      80;
    server_name {{ nginx.server_name }};
    ## redirect http to https ##
    rewrite    ^ https://{{ nginx.server_name }}$request_uri? permanent;
}
{% endif %}

server {
{% if nginx.enable_ssl %}
    listen 443 ssl;
    ssl on;
    ssl_certificate /etc/nginx/ssl/{{ nginx.ssl_certificate_name_crt }}.crt;
    ssl_certificate_key /etc/nginx/ssl/{{ nginx.ssl_certificate_name_key }}.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

{% else %}

    listen 80;

{% endif %}

    server_name {{ nginx.server_name }};
    root /usr/share/nginx/www/{{ nginx.data_root_name }}/;

    location / {
        if ($host !~ ^({{ nginx.server_name }})$ ) {
            return 444;
        }
        try_files $uri @proxy;

        location = /robots.txt {
            alias /usr/share/nginx/www/{{ nginx.data_root_name }}/robots.txt ;
        }

        location /resources/ {
            etag on;
            try_files $uri @proxy;
        }

        location /partials/eula {
            alias /usr/share/nginx/www/{{ nginx.data_root_name }}/eula.html;
        }

    }

    location @proxy {
        client_max_body_size 512M;
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;
        proxy_pass http://{{ backend.server.address }}:{{ backend.server.port }};
    }

    error_page 502 /502.html;


}
